=begin
#Topological Inventory

#Topological Inventory

The version of the OpenAPI document: 2.0.0
Contact: support@redhat.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for TopologicalInventoryApiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = TopologicalInventoryApiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(TopologicalInventoryApiClient::DefaultApi)
    end
  end

  # unit tests for applied_inventories_for_service_offering
  # Invokes computing of ServiceInventories for given ServiceOffering
  # Returns a Task id
  # @param id ID of the resource
  # @param applied_inventories_parameters_service_plan Parameters defining input data for computing inventories
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'applied_inventories_for_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_documentation
  # Return this API document in JSON format
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'get_documentation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_cluster_hosts
  # List Hosts for Cluster
  # Returns an array of Host objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [HostsCollection]
  describe 'list_cluster_hosts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_clusters
  # List Clusters
  # Returns an array of Cluster objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ClustersCollection]
  describe 'list_clusters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_group_containers
  # List Containers for ContainerGroup
  # Returns an array of Container objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainersCollection]
  describe 'list_container_group_containers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_group_tags
  # List Tags for ContainerGroup
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_container_group_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_groups
  # List ContainerGroups
  # Returns an array of ContainerGroup objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerGroupsCollection]
  describe 'list_container_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_image_tags
  # List Tags for ContainerImage
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_container_image_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_images
  # List ContainerImages
  # Returns an array of ContainerImage objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerImagesCollection]
  describe 'list_container_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_node_container_groups
  # List ContainerGroups for ContainerNode
  # Returns an array of ContainerGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerGroupsCollection]
  describe 'list_container_node_container_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_node_tags
  # List Tags for ContainerNode
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_container_node_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_nodes
  # List ContainerNodes
  # Returns an array of ContainerNode objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerNodesCollection]
  describe 'list_container_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_project_container_groups
  # List ContainerGroups for ContainerProject
  # Returns an array of ContainerGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerGroupsCollection]
  describe 'list_container_project_container_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_project_container_resource_quota
  # List ContainerResourceQuota for ContainerProject
  # Returns an array of ContainerResourceQuota objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerResourceQuotaCollection]
  describe 'list_container_project_container_resource_quota test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_project_container_templates
  # List ContainerTemplates for ContainerProject
  # Returns an array of ContainerTemplate objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerTemplatesCollection]
  describe 'list_container_project_container_templates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_project_tags
  # List Tags for ContainerProject
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_container_project_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_projects
  # List ContainerProjects
  # Returns an array of ContainerProject objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerProjectsCollection]
  describe 'list_container_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_resource_quota
  # List ContainerResourceQuota
  # Returns an array of ContainerResourceQuota objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerResourceQuotaCollection]
  describe 'list_container_resource_quota test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_template_tags
  # List Tags for ContainerTemplate
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_container_template_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_container_templates
  # List ContainerTemplates
  # Returns an array of ContainerTemplate objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerTemplatesCollection]
  describe 'list_container_templates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_containers
  # List Containers
  # Returns an array of Container objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainersCollection]
  describe 'list_containers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_datastores
  # List Datastores
  # Returns an array of Datastore objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [DatastoresCollection]
  describe 'list_datastores test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_flavors
  # List Flavors
  # Returns an array of Flavor objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [FlavorsCollection]
  describe 'list_flavors test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_hosts
  # List Hosts
  # Returns an array of Host objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [HostsCollection]
  describe 'list_hosts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipaddress_tags
  # List Tags for Ipaddress
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_ipaddress_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_ipaddresses
  # List Ipaddresses
  # Returns an array of Ipaddress objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_network_adapter_ipaddresses
  # List Ipaddresses for NetworkAdapter
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_network_adapter_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_network_adapter_tags
  # List Tags for NetworkAdapter
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_network_adapter_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_network_adapters
  # List NetworkAdapters
  # Returns an array of NetworkAdapter objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_network_subnets
  # List Subnets for Network
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_network_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_network_tags
  # List Tags for Network
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_network_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_networks
  # List Networks
  # Returns an array of Network objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_ipaddresses
  # List Ipaddresses for OrchestrationStack
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_orchestration_stack_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_network_adapters
  # List NetworkAdapters for OrchestrationStack
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_orchestration_stack_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_networks
  # List Networks for OrchestrationStack
  # Returns an array of Network objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_orchestration_stack_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_security_groups
  # List SecurityGroups for OrchestrationStack
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_orchestration_stack_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_subnets
  # List Subnets for OrchestrationStack
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_orchestration_stack_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_vms
  # List Vms for OrchestrationStack
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_orchestration_stack_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stack_volumes
  # List Volumes for OrchestrationStack
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_orchestration_stack_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_orchestration_stacks
  # List OrchestrationStacks
  # Returns an array of OrchestrationStack objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [OrchestrationStacksCollection]
  describe 'list_orchestration_stacks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_security_group_tags
  # List Tags for SecurityGroup
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_security_group_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_security_group_vms
  # List Vms for SecurityGroup
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_security_group_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_security_groups
  # List SecurityGroups
  # Returns an array of SecurityGroup objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_credential_types
  # List ServiceCredentialTypes
  # Returns an array of ServiceCredentialType objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialTypesCollection]
  describe 'list_service_credential_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_credentials
  # List ServiceCredentials
  # Returns an array of ServiceCredential objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceCredentialsCollection]
  describe 'list_service_credentials test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_nodes
  # List ServiceInstanceNodes
  # Returns an array of ServiceInstanceNode objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instance_service_instance_nodes
  # List ServiceInstanceNodes for ServiceInstance
  # Returns an array of ServiceInstanceNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_service_instance_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_instances
  # List ServiceInstances
  # Returns an array of ServiceInstance objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_inventories
  # List ServiceInventories
  # Returns an array of ServiceInventory objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_inventory_tags
  # List Tags for ServiceInventory
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_service_inventory_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_icons
  # List ServiceOfferingIcons
  # Returns an array of ServiceOfferingIcon objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingIconsCollection]
  describe 'list_service_offering_icons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_nodes
  # List ServiceOfferingNodes
  # Returns an array of ServiceOfferingNode objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_instances
  # List ServiceInstances for ServiceOffering
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_offering_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_offering_nodes
  # List ServiceOfferingNodes for ServiceOffering
  # Returns an array of ServiceOfferingNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_service_offering_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_service_plans
  # List ServicePlans for ServiceOffering
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_service_offering_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offering_tags
  # List Tags for ServiceOffering
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_service_offering_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_offerings
  # List ServiceOfferings
  # Returns an array of ServiceOffering objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_plan_service_instances
  # List ServiceInstances for ServicePlan
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_service_plan_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_service_plans
  # List ServicePlans
  # Returns an array of ServicePlan objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_availabilities
  # List Availabilities for Source
  # Returns an array of Availability objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [AvailabilitiesCollection]
  describe 'list_source_availabilities test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_clusters
  # List Clusters for Source
  # Returns an array of Cluster objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ClustersCollection]
  describe 'list_source_clusters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_container_groups
  # List ContainerGroups for Source
  # Returns an array of ContainerGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerGroupsCollection]
  describe 'list_source_container_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_container_images
  # List ContainerImages for Source
  # Returns an array of ContainerImage objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerImagesCollection]
  describe 'list_source_container_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_container_nodes
  # List ContainerNodes for Source
  # Returns an array of ContainerNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerNodesCollection]
  describe 'list_source_container_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_container_projects
  # List ContainerProjects for Source
  # Returns an array of ContainerProject objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerProjectsCollection]
  describe 'list_source_container_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_container_templates
  # List ContainerTemplates for Source
  # Returns an array of ContainerTemplate objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerTemplatesCollection]
  describe 'list_source_container_templates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_containers
  # List Containers for Source
  # Returns an array of Container objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainersCollection]
  describe 'list_source_containers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_datastores
  # List Datastores for Source
  # Returns an array of Datastore objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [DatastoresCollection]
  describe 'list_source_datastores test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_hosts
  # List Hosts for Source
  # Returns an array of Host objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [HostsCollection]
  describe 'list_source_hosts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_ipaddresses
  # List Ipaddresses for Source
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_source_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_network_adapters
  # List NetworkAdapters for Source
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_source_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_networks
  # List Networks for Source
  # Returns an array of Network objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_source_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_orchestration_stacks
  # List OrchestrationStacks for Source
  # Returns an array of OrchestrationStack objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [OrchestrationStacksCollection]
  describe 'list_source_orchestration_stacks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_ipaddresses
  # List Ipaddresses for SourceRegion
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_source_region_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_network_adapters
  # List NetworkAdapters for SourceRegion
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_source_region_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_networks
  # List Networks for SourceRegion
  # Returns an array of Network objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_source_region_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_orchestration_stacks
  # List OrchestrationStacks for SourceRegion
  # Returns an array of OrchestrationStack objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [OrchestrationStacksCollection]
  describe 'list_source_region_orchestration_stacks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_security_groups
  # List SecurityGroups for SourceRegion
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_source_region_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_service_instances
  # List ServiceInstances for SourceRegion
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_source_region_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_service_offerings
  # List ServiceOfferings for SourceRegion
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_source_region_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_service_plans
  # List ServicePlans for SourceRegion
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_source_region_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_subnets
  # List Subnets for SourceRegion
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_source_region_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_vms
  # List Vms for SourceRegion
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_source_region_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_region_volumes
  # List Volumes for SourceRegion
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_source_region_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_regions
  # List SourceRegions
  # Returns an array of SourceRegion objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SourceRegionsCollection]
  describe 'list_source_regions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_security_groups
  # List SecurityGroups for Source
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_source_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_instance_nodes
  # List ServiceInstanceNodes for Source
  # Returns an array of ServiceInstanceNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstanceNodesCollection]
  describe 'list_source_service_instance_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_instances
  # List ServiceInstances for Source
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_source_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_inventories
  # List ServiceInventories for Source
  # Returns an array of ServiceInventory objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_source_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_offering_nodes
  # List ServiceOfferingNodes for Source
  # Returns an array of ServiceOfferingNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingNodesCollection]
  describe 'list_source_service_offering_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_offerings
  # List ServiceOfferings for Source
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_source_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_service_plans
  # List ServicePlans for Source
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_source_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_source_regions
  # List SourceRegions for Source
  # Returns an array of SourceRegion objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SourceRegionsCollection]
  describe 'list_source_source_regions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_subnets
  # List Subnets for Source
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_source_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_subscriptions
  # List Subscriptions for Source
  # Returns an array of Subscription objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubscriptionsCollection]
  describe 'list_source_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_vms
  # List Vms for Source
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_source_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_volume_types
  # List VolumeTypes for Source
  # Returns an array of VolumeType objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumeTypesCollection]
  describe 'list_source_volume_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_source_volumes
  # List Volumes for Source
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_source_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_sources
  # List Sources
  # Returns an array of Source objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SourcesCollection]
  describe 'list_sources test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subnet_ipaddresses
  # List Ipaddresses for Subnet
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_subnet_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subnet_network_adapters
  # List NetworkAdapters for Subnet
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_subnet_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subnet_tags
  # List Tags for Subnet
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_subnet_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subnets
  # List Subnets
  # Returns an array of Subnet objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_ipaddresses
  # List Ipaddresses for Subscription
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_subscription_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_network_adapters
  # List NetworkAdapters for Subscription
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_subscription_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_networks
  # List Networks for Subscription
  # Returns an array of Network objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_subscription_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_orchestration_stacks
  # List OrchestrationStacks for Subscription
  # Returns an array of OrchestrationStack objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [OrchestrationStacksCollection]
  describe 'list_subscription_orchestration_stacks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_security_groups
  # List SecurityGroups for Subscription
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_subscription_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_service_instances
  # List ServiceInstances for Subscription
  # Returns an array of ServiceInstance objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInstancesCollection]
  describe 'list_subscription_service_instances test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_service_offerings
  # List ServiceOfferings for Subscription
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_subscription_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_service_plans
  # List ServicePlans for Subscription
  # Returns an array of ServicePlan objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServicePlansCollection]
  describe 'list_subscription_service_plans test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_subnets
  # List Subnets for Subscription
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_subscription_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_vms
  # List Vms for Subscription
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_subscription_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscription_volumes
  # List Volumes for Subscription
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_subscription_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_subscriptions
  # List Subscriptions
  # Returns an array of Subscription objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubscriptionsCollection]
  describe 'list_subscriptions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_container_groups
  # List ContainerGroups for Tag
  # Returns an array of ContainerGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerGroupsCollection]
  describe 'list_tag_container_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_container_images
  # List ContainerImages for Tag
  # Returns an array of ContainerImage objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerImagesCollection]
  describe 'list_tag_container_images test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_container_nodes
  # List ContainerNodes for Tag
  # Returns an array of ContainerNode objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerNodesCollection]
  describe 'list_tag_container_nodes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_container_projects
  # List ContainerProjects for Tag
  # Returns an array of ContainerProject objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerProjectsCollection]
  describe 'list_tag_container_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_container_templates
  # List ContainerTemplates for Tag
  # Returns an array of ContainerTemplate objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ContainerTemplatesCollection]
  describe 'list_tag_container_templates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_ipaddresses
  # List Ipaddresses for Tag
  # Returns an array of Ipaddress objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [IpaddressesCollection]
  describe 'list_tag_ipaddresses test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_network_adapters
  # List NetworkAdapters for Tag
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_tag_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_networks
  # List Networks for Tag
  # Returns an array of Network objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworksCollection]
  describe 'list_tag_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_security_groups
  # List SecurityGroups for Tag
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_tag_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_service_inventories
  # List ServiceInventories for Tag
  # Returns an array of ServiceInventory objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceInventoriesCollection]
  describe 'list_tag_service_inventories test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_service_offerings
  # List ServiceOfferings for Tag
  # Returns an array of ServiceOffering objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [ServiceOfferingsCollection]
  describe 'list_tag_service_offerings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_subnets
  # List Subnets for Tag
  # Returns an array of Subnet objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SubnetsCollection]
  describe 'list_tag_subnets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tag_vms
  # List Vms for Tag
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_tag_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tags
  # List Tags
  # Returns an array of Tag objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tasks
  # List Tasks
  # Returns an array of Task objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TasksCollection]
  describe 'list_tasks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vm_network_adapters
  # List NetworkAdapters for Vm
  # Returns an array of NetworkAdapter objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [NetworkAdaptersCollection]
  describe 'list_vm_network_adapters test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vm_security_groups
  # List SecurityGroups for Vm
  # Returns an array of SecurityGroup objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [SecurityGroupsCollection]
  describe 'list_vm_security_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vm_tags
  # List Tags for Vm
  # Returns an array of Tag objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [TagsCollection]
  describe 'list_vm_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vm_volume_attachments
  # List VolumeAttachments for Vm
  # Returns an array of VolumeAttachment objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumeAttachmentsCollection]
  describe 'list_vm_volume_attachments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vm_volumes
  # List Volumes for Vm
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_vm_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_vms
  # List Vms
  # Returns an array of Vm objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_volume_attachments
  # List VolumeAttachments
  # Returns an array of VolumeAttachment objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumeAttachmentsCollection]
  describe 'list_volume_attachments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_volume_type_volumes
  # List Volumes for VolumeType
  # Returns an array of Volume objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_volume_type_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_volume_types
  # List VolumeTypes
  # Returns an array of VolumeType objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumeTypesCollection]
  describe 'list_volume_types test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_volume_vms
  # List Vms for Volume
  # Returns an array of Vm objects
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VmsCollection]
  describe 'list_volume_vms test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_volumes
  # List Volumes
  # Returns an array of Volume objects
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit The numbers of items to return per page.
  # @option opts [Integer] :offset The number of items to skip before starting to collect the result set.
  # @option opts [Object] :filter Filter for querying collections.
  # @option opts [OneOfstringarray] :sort_by The list of attribute and order to sort the result set by.
  # @return [VolumesCollection]
  describe 'list_volumes test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_service_offering
  # Order an existing ServiceOffering
  # Returns a Task id
  # @param id ID of the resource
  # @param order_parameters_service_offering Order parameters defining the service and provider control
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'order_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for order_service_plan
  # Order an existing ServicePlan
  # Returns a Task id
  # @param id ID of the resource
  # @param order_parameters_service_plan Order parameters defining the service and provider control
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'order_service_plan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_graph_ql
  # Perform a GraphQL Query
  # Performs a GraphQL Query
  # @param graph_ql_request GraphQL Query Request
  # @param [Hash] opts the optional parameters
  # @return [GraphQLResponse]
  describe 'post_graph_ql test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_cluster
  # Show an existing Cluster
  # Returns a Cluster object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Cluster]
  describe 'show_cluster test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container
  # Show an existing Container
  # Returns a Container object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Container]
  describe 'show_container test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_group
  # Show an existing ContainerGroup
  # Returns a ContainerGroup object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerGroup]
  describe 'show_container_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_image
  # Show an existing ContainerImage
  # Returns a ContainerImage object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerImage]
  describe 'show_container_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_node
  # Show an existing ContainerNode
  # Returns a ContainerNode object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerNode]
  describe 'show_container_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_project
  # Show an existing ContainerProject
  # Returns a ContainerProject object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerProject]
  describe 'show_container_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_resource_quota
  # Show an existing ContainerResourceQuota
  # Returns a ContainerResourceQuota object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerResourceQuota]
  describe 'show_container_resource_quota test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_container_template
  # Show an existing ContainerTemplate
  # Returns a ContainerTemplate object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ContainerTemplate]
  describe 'show_container_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_datastore
  # Show an existing Datastore
  # Returns a Datastore object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Datastore]
  describe 'show_datastore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_flavor
  # Show an existing Flavor
  # Returns a Flavor object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Flavor]
  describe 'show_flavor test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_host
  # Show an existing Host
  # Returns a Host object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Host]
  describe 'show_host test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_ipaddress
  # Show an existing Ipaddress
  # Returns a Ipaddress object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Ipaddress]
  describe 'show_ipaddress test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_network
  # Show an existing Network
  # Returns a Network object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Network]
  describe 'show_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_network_adapter
  # Show an existing NetworkAdapter
  # Returns a NetworkAdapter object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [NetworkAdapter]
  describe 'show_network_adapter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_orchestration_stack
  # Show an existing OrchestrationStack
  # Returns a OrchestrationStack object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [OrchestrationStack]
  describe 'show_orchestration_stack test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_security_group
  # Show an existing SecurityGroup
  # Returns a SecurityGroup object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [SecurityGroup]
  describe 'show_security_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_credential
  # Show an existing ServiceCredential
  # Returns a ServiceCredential object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceCredential]
  describe 'show_service_credential test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_credential_type
  # Show an existing ServiceCredentialType
  # Returns a ServiceCredentialType object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceCredentialType]
  describe 'show_service_credential_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_instance
  # Show an existing ServiceInstance
  # Returns a ServiceInstance object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstance]
  describe 'show_service_instance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_instance_node
  # Show an existing ServiceInstanceNode
  # Returns a ServiceInstanceNode object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInstanceNode]
  describe 'show_service_instance_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_inventory
  # Show an existing ServiceInventory
  # Returns a ServiceInventory object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceInventory]
  describe 'show_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering
  # Show an existing ServiceOffering
  # Returns a ServiceOffering object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOffering]
  describe 'show_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_icon
  # Show an existing ServiceOfferingIcon
  # Returns a ServiceOfferingIcon object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOfferingIcon]
  describe 'show_service_offering_icon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_icon_icon_data
  # Show an existing ServiceOfferingIcon IconData
  # Returns a ServiceOfferingIcon IconData
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'show_service_offering_icon_icon_data test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_offering_node
  # Show an existing ServiceOfferingNode
  # Returns a ServiceOfferingNode object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServiceOfferingNode]
  describe 'show_service_offering_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_service_plan
  # Show an existing ServicePlan
  # Returns a ServicePlan object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [ServicePlan]
  describe 'show_service_plan test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_source
  # Show an existing Source
  # Returns a Source object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Source]
  describe 'show_source test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_source_region
  # Show an existing SourceRegion
  # Returns a SourceRegion object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [SourceRegion]
  describe 'show_source_region test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_subnet
  # Show an existing Subnet
  # Returns a Subnet object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Subnet]
  describe 'show_subnet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_subscription
  # Show an existing Subscription
  # Returns a Subscription object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Subscription]
  describe 'show_subscription test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_tag
  # Show an existing Tag
  # Returns a Tag object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Tag]
  describe 'show_tag test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_task
  # Show an existing Task
  # Returns a Task object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'show_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_vm
  # Show an existing Vm
  # Returns a Vm object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Vm]
  describe 'show_vm test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_volume
  # Show an existing Volume
  # Returns a Volume object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'show_volume test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_volume_attachment
  # Show an existing VolumeAttachment
  # Returns a VolumeAttachment object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [VolumeAttachment]
  describe 'show_volume_attachment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for show_volume_type
  # Show an existing VolumeType
  # Returns a VolumeType object
  # @param id ID of the resource
  # @param [Hash] opts the optional parameters
  # @return [VolumeType]
  describe 'show_volume_type test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_container_group
  # Tag a ContainerGroup
  # Tags a ContainerGroup object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_container_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_container_image
  # Tag a ContainerImage
  # Tags a ContainerImage object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_container_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_container_node
  # Tag a ContainerNode
  # Tags a ContainerNode object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_container_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_container_project
  # Tag a ContainerProject
  # Tags a ContainerProject object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_container_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_container_template
  # Tag a ContainerTemplate
  # Tags a ContainerTemplate object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_container_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_ipaddress
  # Tag a Ipaddress
  # Tags a Ipaddress object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_ipaddress test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_network
  # Tag a Network
  # Tags a Network object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_network_adapter
  # Tag a NetworkAdapter
  # Tags a NetworkAdapter object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_network_adapter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_security_group
  # Tag a SecurityGroup
  # Tags a SecurityGroup object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_security_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_service_inventory
  # Tag a ServiceInventory
  # Tags a ServiceInventory object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_service_offering
  # Tag a ServiceOffering
  # Tags a ServiceOffering object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_subnet
  # Tag a Subnet
  # Tags a Subnet object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_subnet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for tag_vm
  # Tag a Vm
  # Tags a Vm object
  # @param id ID of the resource
  # @param tag Tag attributes to add
  # @param [Hash] opts the optional parameters
  # @return [Array<Tag>]
  describe 'tag_vm test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_container_group
  # Untag a ContainerGroup
  # Untags a ContainerGroup object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_container_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_container_image
  # Untag a ContainerImage
  # Untags a ContainerImage object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_container_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_container_node
  # Untag a ContainerNode
  # Untags a ContainerNode object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_container_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_container_project
  # Untag a ContainerProject
  # Untags a ContainerProject object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_container_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_container_template
  # Untag a ContainerTemplate
  # Untags a ContainerTemplate object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_container_template test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_ipaddress
  # Untag a Ipaddress
  # Untags a Ipaddress object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_ipaddress test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_network
  # Untag a Network
  # Untags a Network object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_network_adapter
  # Untag a NetworkAdapter
  # Untags a NetworkAdapter object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_network_adapter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_security_group
  # Untag a SecurityGroup
  # Untags a SecurityGroup object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_security_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_service_inventory
  # Untag a ServiceInventory
  # Untags a ServiceInventory object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_service_inventory test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_service_offering
  # Untag a ServiceOffering
  # Untags a ServiceOffering object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_service_offering test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_subnet
  # Untag a Subnet
  # Untags a Subnet object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_subnet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for untag_vm
  # Untag a Vm
  # Untags a Vm object
  # @param id ID of the resource
  # @param tag Tag attributes to removed
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'untag_vm test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_task
  # Update an existing Task
  # Updates a Task object
  # @param id ID of the resource
  # @param task Task attributes to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_task test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
